/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package DBPlayground.jdbc;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.*;
import java.util.Properties;

public class DB {

    public void main(String[] args) throws SQLException {
        DB testDb = new DB();
        Connection con = testDb.getConnection();
        switch (args[1]) {
            case "insert":  testDb.insert(con);
                            break;
            case "select":  testDb.select(con);
                            break;
            case "update":  testDb.update(con);
                            break;
        }
    }

    private Connection getConnection() throws SQLException {
        Properties props = getProperties();

        String host = props.getProperty("host");
        String user = props.getProperty("user");
        String pw = props.getProperty("pw");

        return DriverManager.getConnection("jdbc:mariadb://" + host + "/testdb", user, pw);
    }

    public DB() {
    }

    private Properties getProperties() {
        Properties props = null;
        try {
            FileInputStream fileInputStream = new FileInputStream("src/main/resources/dbconfig.properties");
            props = new Properties();
            props.load(fileInputStream);
        } catch (IOException e) {
            System.err.println(e);
        }
        return props;
    }

    private void insert(Connection con) {
        try {
            Statement statement = con.createStatement();
            String insertion = "INSERT INTO test_table (testdesc) VALUES ('Test in Java');";
            statement.executeUpdate(insertion);
        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    private void select(Connection con) {
        try {
            Statement statement = con.createStatement();
            String selectSQL = "SELECT * FROM test_table";
            ResultSet resultSet = statement.executeQuery(selectSQL);

            while (resultSet.next()) {
                System.out.println(resultSet.getInt(1));
                System.out.println(resultSet.getString("testdesc"));
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    private void update(Connection con) {
        try {
            Statement statement = con.createStatement();
            String updateSQL = "UPDATE test_table SET testdesc = 'some test in java' WHERE testId = 4;";
            statement.executeUpdate(updateSQL);
        } catch (SQLException e) {
            System.err.println(e);
        }
    }
}
